apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ${APP_NAME}
  namespace:  argo-cd
  # Add a this finalizer ONLY if you want these to cascade delete.
  annotations:
    git.unicron.mpi-internal.com/environment: ${MODEL_DEPLOYMENT_ENVIRONMENT}
    notifications.argoproj.io/subscribe.on-deployed.accelerate-metrics: ''
    git.unicron.mpi-internal.com/last-commit-hash: '${LAST_COMMIT_HASH}'
    git.unicron.mpi-internal.com/last-commit-time: '${LAST_COMMIT_TIME}'
    git.unicron.mpi-internal.com/repo: '${ORIGIN_REPO}'
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: ${ARGOCD_PROJECT}
  source:
    repoURL: {{ .Values.unicron.repoURL }}
    targetRevision: {{ .Values.unicron.environment }}
    path: applications/${APP_NAME}/overlays/{{ .Values.unicron.environment }}
  destination:
    server: ${ARGOCD_DEST_SERVER}
    namespace: ${ARGOCD_DEST_NAMESPACE}
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
  - kind: Service
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
    - /spec/clusterIP
  - group: networking.k8s.io
    kind: Ingress
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
  - group: autoscaling
    kind: HorizontalPodAutoscaler
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
  - group: fiaas.schibsted.io
    kind: Application
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
  - group: batch
    kind: Job
    jsonPointers:
    - /metadata/annotations
    - /metadata/resourceVersion
  syncPolicy:
    automated:
      # Specifies if resources should be pruned during auto-syncing ( false by default ).
      prune: true
      # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster
      # and no git change detected ( false by default ).
      selfHeal: true
    retry:
      limit: 10
